{"version":3,"sources":["components/UserHeader/index.module.css","../avatar/index.jsx","components/UserHeader/index.js"],"names":["module","exports","__rest","s","e","t","Object","i","p","Avatar","scale","mounted","isImgExist","childrenWidth","nodeWidth","onError","getPrefixCls","_a","customizePrefixCls","shape","size","src","srcSet","icon","className","alt","others","prefixCls","sizeCls","classNames","classString","sizeStyle","width","height","lineHeight","fontSize","children","type","transformString","childrenStyle","msTransform","WebkitTransform","transform","sizeChildrenStyle","ref","style","opacity","this","prevProps","props","React","connect","login","withRouter","isLogin","user","LinkTo","targetPath","nowPath","window","location","href","replace","origin","callbackPath","history","push","LGRef","useRef","color","styles","span","onClick","to","headerImgUrl","background","current"],"mappings":"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","file":"static/js/12.210a1938.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"UserHeader_span__1doib\"};","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nexport default class Avatar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            scale: 1,\n            mounted: false,\n            isImgExist: true,\n        };\n        this.setScale = () => {\n            if (!this.avatarChildren || !this.avatarNode) {\n                return;\n            }\n            const childrenWidth = this.avatarChildren.offsetWidth; // offsetWidth avoid affecting be transform scale\n            const nodeWidth = this.avatarNode.offsetWidth;\n            // denominator is 0 is no meaning\n            if (childrenWidth === 0 ||\n                nodeWidth === 0 ||\n                (this.lastChildrenWidth === childrenWidth && this.lastNodeWidth === nodeWidth)) {\n                return;\n            }\n            this.lastChildrenWidth = childrenWidth;\n            this.lastNodeWidth = nodeWidth;\n            // add 4px gap for each side to get better performance\n            this.setState({\n                scale: nodeWidth - 8 < childrenWidth ? (nodeWidth - 8) / childrenWidth : 1,\n            });\n        };\n        this.handleImgLoadError = () => {\n            const { onError } = this.props;\n            const errorFlag = onError ? onError() : undefined;\n            if (errorFlag !== false) {\n                this.setState({ isImgExist: false });\n            }\n        };\n        this.renderAvatar = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, shape, size, src, srcSet, icon, className, alt } = _a, others = __rest(_a, [\"prefixCls\", \"shape\", \"size\", \"src\", \"srcSet\", \"icon\", \"className\", \"alt\"]);\n            const { isImgExist, scale, mounted } = this.state;\n            const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n            const sizeCls = classNames({\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-sm`]: size === 'small',\n            });\n            const classString = classNames(prefixCls, className, sizeCls, {\n                [`${prefixCls}-${shape}`]: shape,\n                [`${prefixCls}-image`]: src && isImgExist,\n                [`${prefixCls}-icon`]: icon,\n            });\n            const sizeStyle = typeof size === 'number'\n                ? {\n                    width: size,\n                    height: size,\n                    lineHeight: `${size}px`,\n                    fontSize: icon ? size / 2 : 18,\n                }\n                : {};\n            let { children } = this.props;\n            if (src && isImgExist) {\n                children = <img src={src} srcSet={srcSet} onError={this.handleImgLoadError} alt={alt}/>;\n            }\n            else if (icon) {\n                if (typeof icon === 'string') {\n                    children = <Icon type={icon}/>;\n                }\n                else {\n                    children = icon;\n                }\n            }\n            else {\n                const childrenNode = this.avatarChildren;\n                if (childrenNode || scale !== 1) {\n                    const transformString = `scale(${scale}) translateX(-50%)`;\n                    const childrenStyle = {\n                        msTransform: transformString,\n                        WebkitTransform: transformString,\n                        transform: transformString,\n                    };\n                    const sizeChildrenStyle = typeof size === 'number'\n                        ? {\n                            lineHeight: `${size}px`,\n                        }\n                        : {};\n                    children = (<span className={`${prefixCls}-string`} ref={(node) => (this.avatarChildren = node)} style={Object.assign(Object.assign({}, sizeChildrenStyle), childrenStyle)}>\n            {children}\n          </span>);\n                }\n                else {\n                    const childrenStyle = {};\n                    if (!mounted) {\n                        childrenStyle.opacity = 0;\n                    }\n                    children = (<span className={`${prefixCls}-string`} style={{ opacity: 0 }} ref={(node) => (this.avatarChildren = node)}>\n            {children}\n          </span>);\n                }\n            }\n            return (<span {...others} style={Object.assign(Object.assign({}, sizeStyle), others.style)} className={classString} ref={(node) => (this.avatarNode = node)}>\n        {children}\n      </span>);\n        };\n    }\n    componentDidMount() {\n        this.setScale();\n        this.setState({ mounted: true });\n    }\n    componentDidUpdate(prevProps) {\n        this.setScale();\n        if (prevProps.src !== this.props.src) {\n            this.setState({ isImgExist: true, scale: 1 });\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderAvatar}</ConfigConsumer>;\n    }\n}\nAvatar.defaultProps = {\n    shape: 'circle',\n    size: 'default',\n};\n","import React,{useRef} from 'react';\nimport {connect} from 'react-redux';\nimport {Link,withRouter} from 'react-router-dom';\nimport {Avatar} from 'antd';\nimport styles from './index.module.css';\n\n\n function UserHeader(props){\n    const {isLogin,user={}} = props.login;\n    const LinkTo = (targetPath)=>{\n        //记录当前的path参数\n        const nowPath = window.location.href.replace(window.location.origin,'');\n        const callbackPath = nowPath==='/'?'': `?callback=${nowPath}`;\n        props.history&&props.history.push(`${targetPath}${callbackPath}`)\n    }\n    //记录 未登录的UI\n    const LGRef = useRef(\n        <div style={{color:\"#B4CDCD\"}}>\n            <a className={styles.span} onClick={()=>LinkTo('/login')}>    \n                登录\n            </a>\n                |\n            <a className={styles.span} onClick={()=>LinkTo('/register')}>\n                注册\n            </a>\n        </div>\n    )\n    return isLogin? (\n        <div >\n            <Link to='/user'>\n                <Avatar src={user.headerImgUrl} style={{background:'#fff'}} />\n            </Link>\n        </div>\n    ) : LGRef.current\n}\nexport default connect(({login})=>({\n    login\n}),()=>({}))(withRouter(UserHeader))"],"sourceRoot":""}